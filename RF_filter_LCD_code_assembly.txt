lcd equ p1
busy equ lcd.7
e equ p2.2
rs equ p2.0
rw equ p2.1
org 00h
        mov a,#0ffh  ; FFh sent to port 3
	mov p3,a    ; to make it input port
	mov dptr,#test
 	lcall lcd_init
 	acall delay
 	clr a
 	movc a,@a+dptr
 	acall data_display
 	acall delay
 	clr a
	inc dptr
	movc a,@a+dptr
 	acall data_display
 	acall delay
  main: mov a,p3    ; Take input check if it's not 00h
	cjne a,#00h,alert
	clr p2.3
	clr p2.4
	;jnb p2.3,nlight  ; If backlight button pressed
	;setb p1.1        ; p1.1 high(conn. to lcd )
	;acall delay      ; Wait for a few sec
 	sjmp main
 alert: add a,a 
 	mov r6,a
 	mov dptr,#test1
 	lcall display
 	mov a,r6
 	movc a,@a+dptr
	acall data_display
	acall delay
	inc dptr
	mov a,r6
	movc a,@a+dptr
 	acall data_display
 	mov r1,#10h
 blink:	setb p2.3
 	setb p2.4
 	mov r4,#0FFH
 here2:	acall delay
 	djnz r4,here2
 	clr p2.3
 	clr p2.4
 	mov r4,#0FFH
 here3:	acall delay
	djnz r4,here3
 	djnz r1,blink
 	mov r5,#010H
 herea:	mov r4,#0FFH
 here4:	acall delay
 	djnz r4,here4
 	djnz r5,herea
 	mov dptr,#test
 	lcall display
 	acall delay
 	clr a
 	movc a,@a+dptr
 	acall data_display
 	acall delay
 	inc dptr
 	clr a 
	movc a,@a+dptr
 	acall data_display
 	sjmp main
delay:mov r3,#255d
here: djnz r3,here
       ret	
lcd_init:mov a,#38h
	acall command
	acall delay
	mov a,#0ch
	acall command
	acall delay
	;mov a,#01h
	;acall command
	;acall delay
	;mov a,#06h
	;acall command
	;acall delay
display:mov a,#81h
	acall command
	acall delay
	acall disp_string
	acall delay
	movc a,@a+dptr
 	acall data_display
 	acall delay
 	inc dptr
 	clr a 
	movc a,@a+dptr
 	acall data_display
 	acall delay
        mov a,#0c1h
	acall command
	acall delay
	inc dptr
	acall disp_string
	ret
command:acall ready
	mov lcd,a
	acall delay
	clr rs
	acall delay
	clr rw
	acall delay
	setb e
	acall delay
	clr e
	ret
data_display:acall ready
	acall delay
	mov lcd,a
	acall delay
	setb rs
	acall delay
	clr rw 
	acall delay
	setb e
	acall delay
	clr e
	ret
ready:setb busy
	acall delay
	clr rs
	acall delay
	setb rw
	acall delay
	ret
disp_string:
	clr a
	mov r7,#00h
next_char:
	inc r7
	movc a,@a+dptr
	acall data_display
	acall delay
	clr a 
	inc dptr
	cjne r7,#0ch,next_char
	ret
test:db ' CELL   PHONE ','   DETECTOR   '
test1:db 'Phone Detected','Area Code:  '	 
areacodes: db '0001020304050607080910111213141516'
