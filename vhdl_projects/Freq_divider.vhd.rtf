{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -- Code your design here\
library IEEE;\
use IEEE.std_logic_1164.all;\
\
entity clk_divider is\
generic(divider : integer := 4);\
port(	clk: in std_logic;\
		clk_out: out std_logic);\
end clk_divider;\
\
architecture behave_clk_divider of clk_divider is\
signal count1 : integer := 0;\
signal rand: std_logic:='0';\
begin\
	\
	clk_out <= rand;\
    \
	process(clk)\
    begin\
  	if (clk'event and (clk = '1')) then\
  		if count1 = divider then\
			count1 <= 1;\
            rand <= not rand;\
		end if;\
		\
		if (count1 < divider ) then\
      		count1 <= count1 + 1; \
		end if;		\
	end if;\
        \
     end process;\
end behave_clk_divider;}